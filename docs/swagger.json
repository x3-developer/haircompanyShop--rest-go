{
    "schemes": [
        "http",
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "REST API для магазина бренда Hair Company",
        "title": "Hair Company Shop API",
        "contact": {
            "name": "API Support",
            "email": "x3.na.tri@gmail.com"
        },
        "version": "1.0"
    },
    "host": "https://{host}:{port}",
    "basePath": "/api/v1",
    "paths": {
        "/api/v1/auth/dashboard/login": {
            "post": {
                "description": "Authenticate dashboard user with email and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Dashboard user login",
                "parameters": [
                    {
                        "description": "Login credentials",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.DashboardLoginDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "schema": {
                            "$ref": "#/definitions/docsResponse.DashboardLogin200"
                        }
                    },
                    "400": {
                        "description": "Bad Request or Validation Error",
                        "schema": {
                            "$ref": "#/definitions/docsResponse.DashboardLogin400"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/docsResponse.Response401"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/docsResponse.Response500"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/dashboard/refresh-token": {
            "post": {
                "description": "Refresh authentication token for dashboard user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Dashboard refresh token",
                "parameters": [
                    {
                        "description": "Refresh token",
                        "name": "refreshToken",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RefreshTokenDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Token refreshed successfully",
                        "schema": {
                            "$ref": "#/definitions/docsResponse.DashboardRefreshToken200"
                        }
                    },
                    "400": {
                        "description": "Bad Request or Validation Error",
                        "schema": {
                            "$ref": "#/definitions/docsResponse.DashboardRefreshToken400"
                        }
                    },
                    "401": {
                        "description": "Unauthorized or Invalid Token",
                        "schema": {
                            "$ref": "#/definitions/docsResponse.Response401"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/docsResponse.Response500"
                        }
                    }
                }
            }
        },
        "/api/v1/category": {
            "get": {
                "description": "Retrieve all categories",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "Get all categories",
                "responses": {
                    "200": {
                        "description": "List of categories",
                        "schema": {
                            "$ref": "#/definitions/docsResponse.CategoryList200"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/docsResponse.Response500"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "Create a new category",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Category to create",
                        "name": "category",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/haircompany-shop-rest_internal_modules_v1_category_dto.CreateDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Category created successfully",
                        "schema": {
                            "$ref": "#/definitions/docsResponse.CategoryCreate201"
                        }
                    },
                    "400": {
                        "description": "Bad Request or Validation Error",
                        "schema": {
                            "$ref": "#/definitions/docsResponse.CategoryCreate400"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/docsResponse.Response500"
                        }
                    }
                }
            }
        },
        "/api/v1/category/{id}": {
            "get": {
                "description": "Retrieve category by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "Get category by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category found",
                        "schema": {
                            "$ref": "#/definitions/docsResponse.CategoryGetById200"
                        }
                    },
                    "400": {
                        "description": "Invalid ID",
                        "schema": {
                            "$ref": "#/definitions/docsResponse.Response400"
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "schema": {
                            "$ref": "#/definitions/docsResponse.Response404"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/docsResponse.Response500"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update category by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "Update category",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Category update payload",
                        "name": "category",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category updated",
                        "schema": {
                            "$ref": "#/definitions/docsResponse.CategoryUpdate200"
                        }
                    },
                    "400": {
                        "description": "Bad request or validation error",
                        "schema": {
                            "$ref": "#/definitions/docsResponse.CategoryUpdate400"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/docsResponse.Response500"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete category by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "Delete category",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category deleted",
                        "schema": {
                            "$ref": "#/definitions/docsResponse.CategoryDelete200"
                        }
                    },
                    "400": {
                        "description": "Invalid ID",
                        "schema": {
                            "$ref": "#/definitions/docsResponse.Response400"
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "schema": {
                            "$ref": "#/definitions/docsResponse.Response404"
                        }
                    },
                    "409": {
                        "description": "Category has linked entities",
                        "schema": {
                            "$ref": "#/definitions/docsResponse.Response409"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/docsResponse.Response500"
                        }
                    }
                }
            }
        },
        "/api/v1/dashboard-user/create": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new dashboard user with the provided details.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dashboard User"
                ],
                "summary": "Create a new dashboard user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Dashboard User Create DTO",
                        "name": "dashboardUser",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/haircompany-shop-rest_internal_modules_v1_dashboard_user_dto.CreateDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Dashboard User Created",
                        "schema": {
                            "$ref": "#/definitions/docsResponse.DashboardUserCreate201"
                        }
                    },
                    "400": {
                        "description": "Bad Request or Validation Error",
                        "schema": {
                            "$ref": "#/definitions/docsResponse.DashboardUserCreate400"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/docsResponse.Response500"
                        }
                    }
                }
            }
        },
        "/api/v1/image/upload": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Upload one or more images with a specific imageType. Requires JWT authentication.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Image"
                ],
                "summary": "Upload images",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Type of image (e.g. category)",
                        "name": "imageType",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Image files to upload (multiple allowed)",
                        "name": "images",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Uploaded images info",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/docsResponse.ImageUpload200"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request or Validation Error",
                        "schema": {
                            "$ref": "#/definitions/docsResponse.ImageUpload400"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/docsResponse.Response401"
                        }
                    },
                    "413": {
                        "description": "File too large",
                        "schema": {
                            "$ref": "#/definitions/docsResponse.Response413"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/docsResponse.Response500"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "docsResponse.CategoryCreate201": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/haircompany-shop-rest_internal_modules_v1_category_dto.ResponseDTO"
                },
                "isSuccess": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "docsResponse.CategoryCreate400": {
            "type": "object",
            "properties": {
                "errorCode": {
                    "type": "string",
                    "enum": [
                        "BAD_REQUEST"
                    ]
                },
                "fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/docsResponse.categoryErrorField"
                    }
                },
                "isSuccess": {
                    "type": "boolean",
                    "example": false
                },
                "message": {
                    "type": "string",
                    "example": "Bad request or validation error"
                }
            }
        },
        "docsResponse.CategoryDelete200": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/haircompany-shop-rest_internal_modules_v1_category_dto.ResponseDTO"
                },
                "isSuccess": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "docsResponse.CategoryGetById200": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/haircompany-shop-rest_internal_modules_v1_category_dto.ResponseDTO"
                },
                "isSuccess": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "docsResponse.CategoryList200": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/haircompany-shop-rest_internal_modules_v1_category_dto.ResponseDTO"
                    }
                },
                "isSuccess": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "docsResponse.CategoryUpdate200": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/haircompany-shop-rest_internal_modules_v1_category_dto.ResponseDTO"
                },
                "isSuccess": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "docsResponse.CategoryUpdate400": {
            "type": "object",
            "properties": {
                "errorCode": {
                    "type": "string",
                    "enum": [
                        "BAD_REQUEST"
                    ]
                },
                "fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/docsResponse.categoryErrorField"
                    }
                },
                "isSuccess": {
                    "type": "boolean",
                    "example": false
                },
                "message": {
                    "type": "string",
                    "example": "Bad request or validation error"
                }
            }
        },
        "docsResponse.DashboardLogin200": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/haircompany-shop-rest_internal_modules_v1_auth_dto.ResponseDTO"
                },
                "isSuccess": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "docsResponse.DashboardLogin400": {
            "type": "object",
            "properties": {
                "errorCode": {
                    "type": "string",
                    "enum": [
                        "BAD_REQUEST"
                    ]
                },
                "fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/docsResponse.authErrorField"
                    }
                },
                "isSuccess": {
                    "type": "boolean",
                    "example": false
                },
                "message": {
                    "type": "string",
                    "example": "Bad request or validation error"
                }
            }
        },
        "docsResponse.DashboardRefreshToken200": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/haircompany-shop-rest_internal_modules_v1_auth_dto.ResponseDTO"
                },
                "isSuccess": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "docsResponse.DashboardRefreshToken400": {
            "type": "object",
            "properties": {
                "errorCode": {
                    "type": "string",
                    "enum": [
                        "BAD_REQUEST"
                    ]
                },
                "fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/docsResponse.authErrorField"
                    }
                },
                "isSuccess": {
                    "type": "boolean",
                    "example": false
                },
                "message": {
                    "type": "string",
                    "example": "Bad request or validation error"
                }
            }
        },
        "docsResponse.DashboardUserCreate201": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/haircompany-shop-rest_internal_modules_v1_category_dto.ResponseDTO"
                },
                "isSuccess": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "docsResponse.DashboardUserCreate400": {
            "type": "object",
            "properties": {
                "errorCode": {
                    "type": "string",
                    "enum": [
                        "BAD_REQUEST"
                    ]
                },
                "fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/docsResponse.dashboardUserErrorField"
                    }
                },
                "isSuccess": {
                    "type": "boolean",
                    "example": false
                },
                "message": {
                    "type": "string",
                    "example": "Bad request or validation error"
                }
            }
        },
        "docsResponse.ImageUpload200": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/haircompany-shop-rest_internal_modules_v1_image_dto.ResponseDTO"
                },
                "isSuccess": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "docsResponse.ImageUpload400": {
            "type": "object",
            "properties": {
                "errorCode": {
                    "type": "string",
                    "enum": [
                        "BAD_REQUEST"
                    ]
                },
                "fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/docsResponse.imageErrorField"
                    }
                },
                "isSuccess": {
                    "type": "boolean",
                    "example": false
                },
                "message": {
                    "type": "string",
                    "example": "Bad request or validation error"
                }
            }
        },
        "docsResponse.Response400": {
            "type": "object",
            "properties": {
                "errorCode": {
                    "type": "string",
                    "enum": [
                        "BAD_REQUEST"
                    ]
                },
                "isSuccess": {
                    "type": "boolean",
                    "example": false
                },
                "message": {
                    "type": "string",
                    "example": "Bad request or validation error"
                }
            }
        },
        "docsResponse.Response401": {
            "type": "object",
            "properties": {
                "errorCode": {
                    "type": "string",
                    "enum": [
                        "UNAUTHORIZED"
                    ]
                },
                "isSuccess": {
                    "type": "boolean",
                    "example": false
                },
                "message": {
                    "type": "string",
                    "example": "Unauthorized"
                }
            }
        },
        "docsResponse.Response404": {
            "type": "object",
            "properties": {
                "errorCode": {
                    "type": "string",
                    "enum": [
                        "NOT_FOUND"
                    ]
                },
                "isSuccess": {
                    "type": "boolean",
                    "example": false
                },
                "message": {
                    "type": "string",
                    "example": "Resource not found"
                }
            }
        },
        "docsResponse.Response409": {
            "type": "object",
            "properties": {
                "errorCode": {
                    "type": "string",
                    "enum": [
                        "HAS_LINKED_ENTITIES"
                    ]
                },
                "isSuccess": {
                    "type": "boolean",
                    "example": false
                },
                "message": {
                    "type": "string",
                    "example": "Conflict"
                }
            }
        },
        "docsResponse.Response413": {
            "type": "object",
            "properties": {
                "errorCode": {
                    "type": "string",
                    "enum": [
                        "REQUEST_TOO_LARGE"
                    ]
                },
                "isSuccess": {
                    "type": "boolean",
                    "example": false
                },
                "message": {
                    "type": "string",
                    "example": "Request entity too large"
                }
            }
        },
        "docsResponse.Response500": {
            "type": "object",
            "properties": {
                "errorCode": {
                    "type": "string",
                    "enum": [
                        "SERVER_ERROR"
                    ]
                },
                "isSuccess": {
                    "type": "boolean",
                    "example": false
                },
                "message": {
                    "type": "string",
                    "example": "Internal server error"
                }
            }
        },
        "docsResponse.authErrorField": {
            "type": "object",
            "properties": {
                "errorCode": {
                    "type": "string",
                    "enum": [
                        "REQUIRED",
                        "INVALID_EMAIL",
                        "MIN_LENGTH",
                        "MAX_LENGTH",
                        "INVALID_TOKEN"
                    ]
                },
                "field": {
                    "type": "string",
                    "enum": [
                        "email",
                        "password",
                        "refreshToken"
                    ]
                }
            }
        },
        "docsResponse.categoryErrorField": {
            "type": "object",
            "properties": {
                "errorCode": {
                    "type": "string",
                    "enum": [
                        "NOT_UNIQUE",
                        "NOT_FOUND"
                    ]
                },
                "field": {
                    "type": "string",
                    "enum": [
                        "name",
                        "slug",
                        "parentId"
                    ]
                }
            }
        },
        "docsResponse.dashboardUserErrorField": {
            "type": "object",
            "properties": {
                "errorCode": {
                    "type": "string",
                    "enum": [
                        "NOT_UNIQUE",
                        "NOT_FOUND"
                    ]
                },
                "field": {
                    "type": "string",
                    "enum": [
                        "name",
                        "slug",
                        "parentId"
                    ]
                }
            }
        },
        "docsResponse.imageErrorField": {
            "type": "object",
            "properties": {
                "errorCode": {
                    "type": "string",
                    "example": "INVALID_FORMAT"
                },
                "field": {
                    "type": "string",
                    "example": "images"
                }
            }
        },
        "dto.DashboardLoginDTO": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 8
                }
            }
        },
        "dto.RefreshTokenDTO": {
            "type": "object",
            "required": [
                "refreshToken"
            ],
            "properties": {
                "refreshToken": {
                    "type": "string"
                }
            }
        },
        "dto.UpdateDTO": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "headerImage": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "isActive": {
                    "type": "boolean"
                },
                "isShade": {
                    "type": "boolean"
                },
                "isVisibleInMenu": {
                    "type": "boolean"
                },
                "isVisibleOnMain": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 3
                },
                "parentId": {
                    "type": "integer"
                },
                "seoDescription": {
                    "type": "string"
                },
                "seoKeys": {
                    "type": "string"
                },
                "seoTitle": {
                    "type": "string"
                },
                "slug": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 3
                },
                "sortIndex": {
                    "type": "integer",
                    "minimum": 0
                }
            }
        },
        "haircompany-shop-rest_internal_modules_v1_auth_dto.ResponseDTO": {
            "type": "object",
            "properties": {
                "refreshExpiresAt": {
                    "type": "integer"
                },
                "refreshToken": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "haircompany-shop-rest_internal_modules_v1_category_dto.CreateDTO": {
            "type": "object",
            "required": [
                "headerImage",
                "image",
                "name",
                "slug",
                "sortIndex"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "headerImage": {
                    "type": "string",
                    "maxLength": 255
                },
                "image": {
                    "type": "string",
                    "maxLength": 255
                },
                "isActive": {
                    "type": "boolean"
                },
                "isShade": {
                    "type": "boolean"
                },
                "isVisibleInMenu": {
                    "type": "boolean"
                },
                "isVisibleOnMain": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 3
                },
                "parentId": {
                    "description": "Nullable, can be zero",
                    "type": "integer",
                    "minimum": 0
                },
                "seoDescription": {
                    "type": "string"
                },
                "seoKeys": {
                    "type": "string"
                },
                "seoTitle": {
                    "type": "string",
                    "maxLength": 255
                },
                "slug": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 3
                },
                "sortIndex": {
                    "type": "integer",
                    "maximum": 9999,
                    "minimum": 0
                }
            }
        },
        "haircompany-shop-rest_internal_modules_v1_category_dto.ResponseDTO": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "headerImage": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "isActive": {
                    "type": "boolean"
                },
                "isShade": {
                    "type": "boolean"
                },
                "isVisibleInMenu": {
                    "type": "boolean"
                },
                "isVisibleOnMain": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "parentId": {
                    "type": "integer"
                },
                "seoDescription": {
                    "type": "string"
                },
                "seoKeys": {
                    "type": "string"
                },
                "seoTitle": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "sortIndex": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "haircompany-shop-rest_internal_modules_v1_dashboard_user_dto.CreateDTO": {
            "type": "object",
            "required": [
                "email",
                "password",
                "role"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 8
                },
                "role": {
                    "type": "string",
                    "enum": [
                        "admin",
                        "manager"
                    ]
                }
            }
        },
        "haircompany-shop-rest_internal_modules_v1_image_dto.ResponseDTO": {
            "type": "object",
            "properties": {
                "image": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Введите токен в формате: Bearer {token}",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}